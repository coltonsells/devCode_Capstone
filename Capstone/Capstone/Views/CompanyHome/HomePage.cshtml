@model Capstone.Models.HomePageViewModel
@{
    ViewData["Title"] = "HomePage";
    Layout = "~/Views/Shared/_CompanyLayout.cshtml";
}
@{
    var imgSrc = "Hello";
    if (Model.Image.ImageByte != null)
    {
        var base64 = Convert.ToBase64String(Model.Image.ImageByte);
        imgSrc = String.Format("data:image/gif;base64,{0}", base64);
    }
    else
    {
        imgSrc = "https://images.pexels.com/photos/534031/pexels-photo-534031.jpeg";
    }
    int containerSplit = 12 / Model.Containers.Count;
    string bootContainers = "col-sm-" + containerSplit;
}


<div class="jumbotron" style="min-height:250px;background-image:Url(@imgSrc);background-size:cover;display:flex;justify-content:@Model.Jumbo.TextAlign">
    <h2 class="col-sm-4" style="white-space: pre-line; text-align:@Model.Jumbo.TextAlign;color:@Model.Jumbo.TextColor;font-size:@Model.Jumbo.TextSize;font-family:@Model.Jumbo.TextFont">@Model.Jumbo.Text</h2>

</div>
@if (Model.Comp.CreatorId == Model.UserId)
{
    <button type="button" id="editMode" name="editMode">Edit Mode</button>
}
<br />
<div class="container">
    <div class="row">
        @{
            foreach (var cont in Model.Containers)
            {
                var contImg = "";

                if (cont.Maps)
                {
                    <div id="map" class="@bootContainers">
                        <script>

                        function initMap() {
                            var myLatLng = { lat: @Model.Comp.Lat, lng: @Model.Comp.Long };

                    var map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 15,
                    center: myLatLng
                    });

                        var marker = new google.maps.Marker({
                          position: myLatLng,
                          map: map,
                          title: 'Hello World!'
                        });
                      }
                        </script>
                        <script async defer
                                src="@Model.Comp.srcKey">
                        </script>
                    </div>
                }
                else if (cont.Twitter)
                {
                    <div class="@bootContainers">
                        @{
                            string twitterLink = "https://twitter.com/" + Model.Comp.Twitter + "?ref_src=twsrc%5Etfw";
                        }
                        <a class="twitter-timeline" data-height="500" href="@twitterLink"></a>
                        <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
                        @*How to generate the href attribute from the users twitter url?*@
                    </div>
                }

                else if (cont.Image != null)
                {
                    var base64 = Convert.ToBase64String(cont.Image);
                    contImg = String.Format("data:image/gif;base64,{0}", base64);
                    <div class="@bootContainers" style="min-height:200px;width=100%:200px;background-image:Url(@contImg) ;background-size:cover"></div>
                }
                else
                {

                    <div class="@bootContainers" style="background-color:@cont.BgColor;text-align:@cont.Align;color:@cont.Color;font-size:@cont.FontSize;font-family:@cont.Font"><span style="white-space: pre-line">@cont.Text</span></div>
                }
                <button class="editButton" style="display:none" id="@cont.DivSection" onclick="location.href ='@Url.Action("EditHomeContainer", "CompanyHome", new { id = Model.Comp.Id, divSection = cont.DivSection})'">Edit</button>
            }
        }
    </div>
    <style>
                jumboAlign {
                    display: flex;
                    align-items: center;
                }
                .carousel-indicators li {
                    visibility: hidden;
                }
                .carousel-caption {
                    top: 0;
                    bottom: auto;
                    align-content:@Model.Jumbo.TextAlign;
                }
    </style>
    <style>
        /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
        #map {
            height: 500px;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
    </style>
    @if (Model.Comp.CreatorId == Model.UserId)
    {
        <script>
            document.getElementById("editMode").addEventListener("click", function () {

                var buttons = document.getElementsByClassName("editButton");
                if (buttons[0].style.display == "none") {
                    for (i = 0; i < buttons.length; i++) {
                        buttons[i].style.display = "block";
                    }
                }
                else {
                    for (i = 0; i < buttons.length; i++) {
                        buttons[i].style.display = "none";
                    }
                }

            });

        </script>
    }
</div>
